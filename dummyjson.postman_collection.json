{
	"info": {
		"_postman_id": "4513b592-d1df-43d5-abb8-d7c705ae29a7",
		"name": "dummyjson",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39886568"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let data = pm.response.json();",
									"",
									"let dataToken = data['accessToken']; ",
									"pm.environment.set(\"accessToken\",dataToken);",
									"",
									"let refToken =  data['refreshToken']; ",
									"pm.environment.set(\"refreshToken\",refToken);",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"emilys\",\r\n    \"password\": \"emilyspass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/auth/login",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Data me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/auth/me",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let data = pm.response.json();",
									"",
									"let refToken =  data['refreshToken']; ",
									"pm.environment.set(\"refreshToken\",refToken);",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\":{{refreshToken}},\r\n    \"expiresInMins\": 30\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/auth/refresh",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "ProductGetAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "ProductGetById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "ProductSearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products/search?q=laptop",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "laptop"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ProductPagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products?limit=10&skip=10&select=title,price",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "title,price"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ProductSort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products?sortBy=title&order=asc",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "title"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CategoryGetAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products/categories",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "CategoryGetList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products/category-list",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products",
								"category-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "CategorySearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products/category/furniture",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products",
								"category",
								"furniture"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Carts",
			"item": [
				{
					"name": "CartGetAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/carts",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "CartGetById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/carts/252",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts",
								"252"
							]
						}
					},
					"response": []
				},
				{
					"name": "CartGetByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/carts/user/5555",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts",
								"user",
								"5555"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipes",
			"item": [
				{
					"name": "RecipesGetAllData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/recipes",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "RecipesGetById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/recipes/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"recipes",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "RecipeSearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/recipes/search?q=Margherita",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"recipes",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "Margherita"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RecipePagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/recipes?limit=10&skip=10&select=name,image",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"recipes"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "name,image"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RecipeSort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/recipes?sortBy=name&order=asc",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"recipes"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "name"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RecipeTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/recipes/tags",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"recipes",
								"tags"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "GetAllDataUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/users",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDataById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/users/2",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDataByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/users/search?q=John",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "John"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDataFilter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/users/filter?key=hair.color&value=Brown",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users",
								"filter"
							],
							"query": [
								{
									"key": "key",
									"value": "hair.color"
								},
								{
									"key": "value",
									"value": "Brown"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDataPagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/users?limit=5&skip=10&select=firstName,age",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "firstName,age"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDataSort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/users?sortBy=firstName&order=asc",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "firstName"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CartDataByIdUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/users/6/carts",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users",
								"6",
								"carts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "post",
			"item": [
				{
					"name": "GetAllDataPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/posts",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetByIdPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/posts/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/posts/search?q=love",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"posts",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "love"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PostPagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/posts?limit=10&skip=10&select=title,reactions,userId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "title,reactions,userId"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "GetAllDataComments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/comments",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetByIdComment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/comments/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "CommentPagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/comments?limit=10&skip=10&select=body,postId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "body,postId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCommentByPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/comments/post/6",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"comments",
								"post",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Todo",
			"item": [
				{
					"name": "GetAllDataTodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/todos",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetByIdTodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/todos/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"todos",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTodoRandom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/todos/random",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"todos",
								"random"
							]
						}
					},
					"response": []
				},
				{
					"name": "PaginationTodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/todos?limit=3&skip=10",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "skip",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetByUserTodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/todos/user/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"todos",
								"user",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Quotes",
			"item": [
				{
					"name": "GetAllDataQuotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/quotes",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"quotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetByIdQuotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// --- Autogenerated Happy Path Tests ---",
									"",
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Response is valid JSON\", () => { pm.response.to.be.json; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/quotes/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"quotes",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}